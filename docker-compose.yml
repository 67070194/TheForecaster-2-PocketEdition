services:
  db:
    image: timescale/timescaledb:latest-pg16
    container_name: iot_timescaledb
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=iotdb
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d iotdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    volumes:
      - timescale-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: iot_server
    depends_on:
      - db
    env_file:
      - ./.env
    environment:
      - PORT=${SERVER_PORT:-3001}
      - BASE_TOPIC=${BASE_TOPIC}
      - MQTT_URL=${MQTT_URL}
      - MQTT_USERNAME=${MQTT_USERNAME}
      - MQTT_PASSWORD=${MQTT_PASSWORD}
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:postgres@db:5432/iotdb}
      - UPLOADS_DIR=${UPLOADS_DIR:-/app/uploads}
      - STATIC_DIR=${STATIC_DIR:-/app/public}
    ports:
      - "3001:3001"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:3001/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  web:
    build:
      context: ./website
      dockerfile: Dockerfile
      args:
        - VITE_API_BASE=${VITE_API_BASE:-}
        - VITE_FW_BASE=${VITE_FW_BASE:-}
    container_name: iot_web
    depends_on:
      - server
    ports:
      - "8080:80"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
  backup:
    image: alpine:3.20
    container_name: iot_backup
    depends_on:
      - db
      - server
    env_file:
      - ./.env
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-iotdb}
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
      - BACKUP_INTERVAL_SECONDS=${BACKUP_INTERVAL_SECONDS:-86400}
    volumes:
      - backups:/backups
    entrypoint: ["/bin/sh","-c","set -e; apk add --no-cache postgresql15-client tzdata >/dev/null; echo 'Backup service started'; while true; do TS=$$(date +%Y%m%d_%H%M%S); pg_dump -h db -U $POSTGRES_USER -d $POSTGRES_DB -F c -f /backups/iotdb_$$TS.dump && echo Backup at $$TS; sleep $BACKUP_INTERVAL_SECONDS; done"]
    restart: unless-stopped

volumes:
  timescale-data:
  backups:
